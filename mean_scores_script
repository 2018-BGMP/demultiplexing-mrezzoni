#!/usr/bin/env python3

'''
This script takes either a biological sequence or an index and averages the quality scores
across each nucleotide position.
'''

import argparse
import gzip
import numpy as np

def get_arguments():
    parser = argparse.ArgumentParser(description="Allows users to know how to navigate this program")
    parser.add_argument("-f", "--filename", help="Gives acces to file", required=True, type=str)
    parser.add_argument("-s", "--seq_size", help="Specify size of the sequence read (barcode vs full sequence)", required=True, type=int)
    return parser.parse_args()

args = get_arguments()
length = args.seq_size # expect either 101 or 8 for biological sequence or index sequence, respectively
file = args.filename

def convert_phred(letter):
    """Converts a single character into a phred score"""
    return(ord(letter)-33)

mean_scores = np.zeros(length) # create an array of zeros for either biological sequence mean scores or index sequence mean scores

with gzip.open(file, "rt") as fh: # reads zipped file as text, not binary
    LN = 1
    for line in fh:
        LN += 1
        if LN % 4 == 1: # grab the quality score line
            line = line.strip('\n')
            bp_counter = 0 # initialize counter to track the nucleotide's position
            
            for phred in line:
                qscore = convert_phred(phred) # convert into phred score
                mean_scores[bp_counter] += qscore # the phred score of a base pair of a specific line read will be recorded 
                bp_counter += 1 # increment after every nucleotide's score is converted    

    mean_scores = mean_scores / (LN/4) # divide by 4 to only count the sequence lines 

for i in range(len(mean_scores)): #prints output to be written to a tsv by the loop_all_reads script
	print(i,'\t',mean_scores[i])